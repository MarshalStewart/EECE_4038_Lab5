

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Mar 28 17:28:51 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F886 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0019                     _TXREG	set	25
   207  001A                     _RCREG	set	26
   208  0006                     _PORTB	set	6
   209  000B                     _INTCONbits	set	11
   210  0018                     _RCSTAbits	set	24
   211  00C4                     _CREN	set	196
   212  0033                     _RB3	set	51
   213  0031                     _RB1	set	49
   214  0030                     _RB0	set	48
   215  0032                     _RB2	set	50
   216  0065                     _RCIF	set	101
   217  0086                     _TRISB	set	134
   218  008C                     _PIE1bits	set	140
   219  0099                     _SPBRG	set	153
   220  0098                     _TXSTAbits	set	152
   221  0087                     _TRISC	set	135
   222  04C1                     _TRMT	set	1217
   223  0189                     _ANSELH	set	393
   224  0188                     _ANSEL	set	392
   225                           
   226                           	psect	cinit
   227  000F                     start_initialization:	
   228                           ; #config settings
   229                           
   230  000F                     __initialization:
   231                           
   232                           ; Clear objects allocated to COMMON
   233  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   234  0010                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  0010                     __end_of__initialization:
   238  0010  0183               	clrf	3
   239  0011  120A  118A  28C6   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMMON
   242  0078                     __pbssCOMMON:
   243  0078                     _data:
   244  0078                     	ds	1
   245                           
   246                           	psect	cstackCOMMON
   247  0070                     __pcstackCOMMON:
   248  0070                     ?_setupUART:
   249  0070                     ?_setupLED:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_rx_char:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ??_rx_char:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_tx_char:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_ISR:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_main:	
   265                           ; 1 bytes @ 0x0
   266                           
   267                           
   268                           ; 1 bytes @ 0x0
   269  0070                     	ds	3
   270  0073                     ??_ISR:
   271                           
   272                           ; 1 bytes @ 0x3
   273  0073                     	ds	5
   274                           
   275                           	psect	cstackBANK0
   276  0020                     __pcstackBANK0:
   277  0020                     ??_setupUART:
   278  0020                     ??_setupLED:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0020                     ??_tx_char:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 1 bytes @ 0x0
   286  0020                     	ds	3
   287  0023                     tx_char@a:
   288                           
   289                           ; 1 bytes @ 0x3
   290  0023                     	ds	1
   291  0024                     ??_main:
   292                           
   293                           ; 1 bytes @ 0x4
   294  0024                     	ds	3
   295                           
   296                           	psect	maintext
   297  00C6                     __pmaintext:	
   298 ;;
   299 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   300 ;;
   301 ;; *************** function _main *****************
   302 ;; Defined at:
   303 ;;		line 127 in file "main.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0, pclath, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : B00/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   317 ;;      Params:         0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0
   319 ;;      Temps:          0       3       0       0       0
   320 ;;      Totals:         0       3       0       0       0
   321 ;;Total ram usage:        3 bytes
   322 ;; Hardware stack levels required when called: 3
   323 ;; This function calls:
   324 ;;		_setupLED
   325 ;;		_setupUART
   326 ;;		_tx_char
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332  00C6                     _main:	
   333                           ;psect for function _main
   334                           
   335  00C6                     l788:	
   336                           ;incstack = 0
   337                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   338                           
   339                           
   340                           ;main.c: 129:     setupUART();
   341  00C6  120A  118A  2108  120A  118A  	fcall	_setupUART
   342  00CB                     l790:
   343                           
   344                           ;main.c: 130:     setupLED();
   345  00CB  120A  118A  211D  120A  118A  	fcall	_setupLED
   346  00D0                     l792:
   347                           
   348                           ;main.c: 133:         tx_char('a');
   349  00D0  3061               	movlw	97
   350  00D1  120A  118A  20E9  120A  118A  	fcall	_tx_char
   351  00D6                     l794:
   352                           
   353                           ;main.c: 134:         _delay((unsigned long)((100)*(8000000/4000.0)));
   354  00D6  3002               	movlw	2
   355  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   356  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   357  00D9  00A6               	movwf	??_main+2
   358  00DA  3004               	movlw	4
   359  00DB  00A5               	movwf	??_main+1
   360  00DC  30B9               	movlw	185
   361  00DD  00A4               	movwf	??_main
   362  00DE                     u77:
   363  00DE  0BA4               	decfsz	??_main,f
   364  00DF  28DE               	goto	u77
   365  00E0  0BA5               	decfsz	??_main+1,f
   366  00E1  28DE               	goto	u77
   367  00E2  0BA6               	decfsz	??_main+2,f
   368  00E3  28DE               	goto	u77
   369  00E4  28E5               	nop2
   370  00E5  28D0               	goto	l792
   371  00E6  120A  118A  280C   	ljmp	start
   372  00E9                     __end_of_main:
   373                           
   374                           	psect	text1
   375  00E9                     __ptext1:	
   376 ;; *************** function _tx_char *****************
   377 ;; Defined at:
   378 ;;		line 75 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;  a               1    wreg     unsigned char 
   381 ;; Auto vars:     Size  Location     Type
   382 ;;  a               1    3[BANK0 ] unsigned char 
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   392 ;;      Params:         0       0       0       0       0
   393 ;;      Locals:         0       1       0       0       0
   394 ;;      Temps:          0       3       0       0       0
   395 ;;      Totals:         0       4       0       0       0
   396 ;;Total ram usage:        4 bytes
   397 ;; Hardware stack levels used: 1
   398 ;; Hardware stack levels required when called: 2
   399 ;; This function calls:
   400 ;;		Nothing
   401 ;; This function is called by:
   402 ;;		_main
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406  00E9                     _tx_char:	
   407                           ;psect for function _tx_char
   408                           
   409                           
   410                           ;incstack = 0
   411                           ; Regs used in _tx_char: [wreg]
   412                           ;tx_char@a stored from wreg
   413  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   414  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   415  00EB  00A3               	movwf	tx_char@a
   416  00EC                     l782:
   417                           
   418                           ;main.c: 75: void tx_char(char a);main.c: 76: {;main.c: 78:     RB0 = 1;
   419  00EC  1406               	bsf	6,0	;volatile
   420  00ED                     l784:
   421                           
   422                           ;main.c: 79:     _delay((unsigned long)((100)*(8000000/4000.0)));
   423  00ED  3002               	movlw	2
   424  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   425  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   426  00F0  00A2               	movwf	??_tx_char+2
   427  00F1  3004               	movlw	4
   428  00F2  00A1               	movwf	??_tx_char+1
   429  00F3  30B9               	movlw	185
   430  00F4  00A0               	movwf	??_tx_char
   431  00F5                     u87:
   432  00F5  0BA0               	decfsz	??_tx_char,f
   433  00F6  28F5               	goto	u87
   434  00F7  0BA1               	decfsz	??_tx_char+1,f
   435  00F8  28F5               	goto	u87
   436  00F9  0BA2               	decfsz	??_tx_char+2,f
   437  00FA  28F5               	goto	u87
   438  00FB  28FC               	nop2
   439  00FC                     l786:
   440                           
   441                           ;main.c: 80:     RB0 = 0;
   442  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   443  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   444  00FE  1006               	bcf	6,0	;volatile
   445                           
   446                           ;main.c: 81:     TXREG=a;
   447  00FF  0823               	movf	tx_char@a,w
   448  0100  0099               	movwf	25	;volatile
   449  0101                     l59:	
   450                           ;main.c: 82:     while(!TRMT);
   451                           
   452  0101  1683               	bsf	3,5	;RP0=1, select bank1
   453  0102  1303               	bcf	3,6	;RP1=0, select bank1
   454  0103  1C98               	btfss	24,1	;volatile
   455  0104  2906               	goto	u61
   456  0105  2907               	goto	u60
   457  0106                     u61:
   458  0106  2901               	goto	l59
   459  0107                     u60:
   460  0107                     l62:
   461  0107  0008               	return
   462  0108                     __end_of_tx_char:
   463                           
   464                           	psect	text2
   465  0108                     __ptext2:	
   466 ;; *************** function _setupUART *****************
   467 ;; Defined at:
   468 ;;		line 37 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0
   485 ;;      Totals:         0       0       0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; Hardware stack levels required when called: 2
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496  0108                     _setupUART:	
   497                           ;psect for function _setupUART
   498                           
   499  0108                     l756:	
   500                           ;incstack = 0
   501                           ; Regs used in _setupUART: [wreg+status,2]
   502                           
   503                           
   504                           ;main.c: 39:     TRISC = 0x0;
   505  0108  1683               	bsf	3,5	;RP0=1, select bank1
   506  0109  1303               	bcf	3,6	;RP1=0, select bank1
   507  010A  0187               	clrf	7	;volatile
   508  010B                     l758:
   509                           
   510                           ;main.c: 40:     TRISC = 0x80;
   511  010B  3080               	movlw	128
   512  010C  0087               	movwf	7	;volatile
   513  010D                     l760:
   514                           
   515                           ;main.c: 43:     TXSTAbits.BRGH = 1;
   516  010D  1518               	bsf	24,2	;volatile
   517  010E                     l762:
   518                           
   519                           ;main.c: 44:  SPBRG = (8000000 - 9600*16)/(9600*16);
   520  010E  3062               	movlw	98
   521  010F  0099               	movwf	25	;volatile
   522  0110                     l764:
   523                           
   524                           ;main.c: 45:     TXSTAbits.SYNC = 0;
   525  0110  1218               	bcf	24,4	;volatile
   526  0111                     l766:
   527                           
   528                           ;main.c: 46:     RCSTAbits.SPEN = 1;
   529  0111  1283               	bcf	3,5	;RP0=0, select bank0
   530  0112  1303               	bcf	3,6	;RP1=0, select bank0
   531  0113  1798               	bsf	24,7	;volatile
   532  0114                     l768:
   533                           
   534                           ;main.c: 47:     RCSTAbits.CREN = 1;
   535  0114  1618               	bsf	24,4	;volatile
   536  0115                     l770:
   537                           
   538                           ;main.c: 48:     TXSTAbits.TXEN = 1;
   539  0115  1683               	bsf	3,5	;RP0=1, select bank1
   540  0116  1303               	bcf	3,6	;RP1=0, select bank1
   541  0117  1698               	bsf	24,5	;volatile
   542  0118                     l772:
   543                           
   544                           ;main.c: 49:     TXSTAbits.TX9 = 0;
   545  0118  1318               	bcf	24,6	;volatile
   546  0119                     l774:
   547                           
   548                           ;main.c: 51:     INTCONbits. GIE = 1;
   549  0119  178B               	bsf	11,7	;volatile
   550  011A                     l776:
   551                           
   552                           ;main.c: 52:     INTCONbits.PEIE = 1;
   553  011A  170B               	bsf	11,6	;volatile
   554  011B                     l778:
   555                           
   556                           ;main.c: 53:     PIE1bits.RCIE = 1;
   557  011B  168C               	bsf	12,5	;volatile
   558  011C                     l47:
   559  011C  0008               	return
   560  011D                     __end_of_setupUART:
   561                           
   562                           	psect	text3
   563  011D                     __ptext3:	
   564 ;; *************** function _setupLED *****************
   565 ;; Defined at:
   566 ;;		line 57 in file "main.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		status,2
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; Hardware stack levels required when called: 2
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594  011D                     _setupLED:	
   595                           ;psect for function _setupLED
   596                           
   597  011D                     l780:	
   598                           ;incstack = 0
   599                           ; Regs used in _setupLED: [status,2]
   600                           
   601                           
   602                           ;main.c: 58:     PORTB = 0x0;
   603  011D  1283               	bcf	3,5	;RP0=0, select bank0
   604  011E  1303               	bcf	3,6	;RP1=0, select bank0
   605  011F  0186               	clrf	6	;volatile
   606                           
   607                           ;main.c: 59:     TRISB = 0x0;
   608  0120  1683               	bsf	3,5	;RP0=1, select bank1
   609  0121  1303               	bcf	3,6	;RP1=0, select bank1
   610  0122  0186               	clrf	6	;volatile
   611                           
   612                           ;main.c: 60:     ANSEL = 0x0;
   613  0123  1683               	bsf	3,5	;RP0=1, select bank3
   614  0124  1703               	bsf	3,6	;RP1=1, select bank3
   615  0125  0188               	clrf	8	;volatile
   616                           
   617                           ;main.c: 61:     ANSELH = 0x0;
   618  0126  0189               	clrf	9	;volatile
   619  0127                     l50:
   620  0127  0008               	return
   621  0128                     __end_of_setupLED:
   622                           
   623                           	psect	text4
   624  0014                     __ptext4:	
   625 ;; *************** function _ISR *****************
   626 ;; Defined at:
   627 ;;		line 85 in file "main.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0
   643 ;;      Temps:          5       0       0       0       0
   644 ;;      Totals:         5       0       0       0       0
   645 ;;Total ram usage:        5 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 1
   648 ;; This function calls:
   649 ;;		_rx_char
   650 ;; This function is called by:
   651 ;;		Interrupt level 1
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655  0014                     _ISR:	
   656                           ;psect for function _ISR
   657                           
   658  0014                     i1l710:
   659                           
   660                           ;main.c: 88:     RB1 = 1;
   661  0014  1283               	bcf	3,5	;RP0=0, select bank0
   662  0015  1303               	bcf	3,6	;RP1=0, select bank0
   663  0016  1486               	bsf	6,1	;volatile
   664  0017                     i1l712:
   665                           
   666                           ;main.c: 89:     _delay((unsigned long)((100)*(8000000/4000.0)));
   667  0017  3002               	movlw	2
   668  0018  00F5               	movwf	??_ISR+2
   669  0019  3004               	movlw	4
   670  001A  00F4               	movwf	??_ISR+1
   671  001B  30BA               	movlw	186
   672  001C  00F3               	movwf	??_ISR
   673  001D                     u9_27:
   674  001D  0BF3               	decfsz	??_ISR,f
   675  001E  281D               	goto	u9_27
   676  001F  0BF4               	decfsz	??_ISR+1,f
   677  0020  281D               	goto	u9_27
   678  0021  0BF5               	decfsz	??_ISR+2,f
   679  0022  281D               	goto	u9_27
   680  0023  0000               	nop
   681  0024                     i1l714:
   682                           
   683                           ;main.c: 90:     RB1 = 0;
   684  0024  1283               	bcf	3,5	;RP0=0, select bank0
   685  0025  1303               	bcf	3,6	;RP1=0, select bank0
   686  0026  1086               	bcf	6,1	;volatile
   687                           
   688                           ;main.c: 91:     _delay((unsigned long)((100)*(8000000/4000.0)));
   689  0027  3002               	movlw	2
   690  0028  00F5               	movwf	??_ISR+2
   691  0029  3004               	movlw	4
   692  002A  00F4               	movwf	??_ISR+1
   693  002B  30BA               	movlw	186
   694  002C  00F3               	movwf	??_ISR
   695  002D                     u10_27:
   696  002D  0BF3               	decfsz	??_ISR,f
   697  002E  282D               	goto	u10_27
   698  002F  0BF4               	decfsz	??_ISR+1,f
   699  0030  282D               	goto	u10_27
   700  0031  0BF5               	decfsz	??_ISR+2,f
   701  0032  282D               	goto	u10_27
   702  0033  0000               	nop
   703  0034                     i1l716:
   704                           
   705                           ;main.c: 92:     if(RCIF==1)
   706  0034  1283               	bcf	3,5	;RP0=0, select bank0
   707  0035  1303               	bcf	3,6	;RP1=0, select bank0
   708  0036  1E8C               	btfss	12,5	;volatile
   709  0037  2839               	goto	u3_21
   710  0038  283A               	goto	u3_20
   711  0039                     u3_21:
   712  0039  2897               	goto	i1l70
   713  003A                     u3_20:
   714  003A                     i1l718:
   715                           
   716                           ;main.c: 93:     {;main.c: 94:         if(RCSTAbits.OERR)
   717  003A  1C98               	btfss	24,1	;volatile
   718  003B  283D               	goto	u4_21
   719  003C  283E               	goto	u4_20
   720  003D                     u4_21:
   721  003D  2863               	goto	i1l732
   722  003E                     u4_20:
   723  003E                     i1l720:
   724                           
   725                           ;main.c: 95:         {;main.c: 97:             RB3 = 1;
   726  003E  1586               	bsf	6,3	;volatile
   727  003F                     i1l722:
   728                           
   729                           ;main.c: 98:             _delay((unsigned long)((100)*(8000000/4000.0)));
   730  003F  3002               	movlw	2
   731  0040  00F5               	movwf	??_ISR+2
   732  0041  3004               	movlw	4
   733  0042  00F4               	movwf	??_ISR+1
   734  0043  30BA               	movlw	186
   735  0044  00F3               	movwf	??_ISR
   736  0045                     u11_27:
   737  0045  0BF3               	decfsz	??_ISR,f
   738  0046  2845               	goto	u11_27
   739  0047  0BF4               	decfsz	??_ISR+1,f
   740  0048  2845               	goto	u11_27
   741  0049  0BF5               	decfsz	??_ISR+2,f
   742  004A  2845               	goto	u11_27
   743  004B  0000               	nop
   744  004C                     i1l724:
   745                           
   746                           ;main.c: 99:             RB3 = 0;
   747  004C  1283               	bcf	3,5	;RP0=0, select bank0
   748  004D  1303               	bcf	3,6	;RP1=0, select bank0
   749  004E  1186               	bcf	6,3	;volatile
   750                           
   751                           ;main.c: 100:             _delay((unsigned long)((100)*(8000000/4000.0)));
   752  004F  3002               	movlw	2
   753  0050  00F5               	movwf	??_ISR+2
   754  0051  3004               	movlw	4
   755  0052  00F4               	movwf	??_ISR+1
   756  0053  30BA               	movlw	186
   757  0054  00F3               	movwf	??_ISR
   758  0055                     u12_27:
   759  0055  0BF3               	decfsz	??_ISR,f
   760  0056  2855               	goto	u12_27
   761  0057  0BF4               	decfsz	??_ISR+1,f
   762  0058  2855               	goto	u12_27
   763  0059  0BF5               	decfsz	??_ISR+2,f
   764  005A  2855               	goto	u12_27
   765  005B  0000               	nop
   766  005C                     i1l726:
   767                           
   768                           ;main.c: 102:             CREN = 0;
   769  005C  1283               	bcf	3,5	;RP0=0, select bank0
   770  005D  1303               	bcf	3,6	;RP1=0, select bank0
   771  005E  1218               	bcf	24,4	;volatile
   772  005F                     i1l728:
   773                           
   774                           ;main.c: 103:             __nop();
   775  005F  0000               	nop
   776  0060                     i1l730:
   777                           
   778                           ;main.c: 104:             CREN = 1;
   779  0060  1283               	bcf	3,5	;RP0=0, select bank0
   780  0061  1303               	bcf	3,6	;RP1=0, select bank0
   781  0062  1618               	bsf	24,4	;volatile
   782  0063                     i1l732:
   783                           
   784                           ;main.c: 107:         data = rx_char();
   785  0063  120A  118A  209E  120A  118A  	fcall	_rx_char
   786  0068  00F3               	movwf	??_ISR
   787  0069  0873               	movf	??_ISR,w
   788  006A  00F8               	movwf	_data
   789  006B                     i1l734:
   790                           
   791                           ;main.c: 110:         if (data == 'a')
   792  006B  3061               	movlw	97
   793  006C  0678               	xorwf	_data,w
   794  006D  1D03               	btfss	3,2
   795  006E  2870               	goto	u5_21
   796  006F  2871               	goto	u5_20
   797  0070                     u5_21:
   798  0070  2897               	goto	i1l70
   799  0071                     u5_20:
   800  0071                     i1l736:
   801                           
   802                           ;main.c: 111:         {;main.c: 112:             RB0 = 1;
   803  0071  1283               	bcf	3,5	;RP0=0, select bank0
   804  0072  1303               	bcf	3,6	;RP1=0, select bank0
   805  0073  1406               	bsf	6,0	;volatile
   806                           
   807                           ;main.c: 113:             RB1 = 1;
   808  0074  1486               	bsf	6,1	;volatile
   809                           
   810                           ;main.c: 114:             RB2 = 1;
   811  0075  1506               	bsf	6,2	;volatile
   812                           
   813                           ;main.c: 115:             RB3 = 1;
   814  0076  1586               	bsf	6,3	;volatile
   815  0077                     i1l738:
   816                           
   817                           ;main.c: 116:             _delay((unsigned long)((5000)*(8000000/4000.0)));
   818  0077  3033               	movlw	51
   819  0078  00F5               	movwf	??_ISR+2
   820  0079  30BB               	movlw	187
   821  007A  00F4               	movwf	??_ISR+1
   822  007B  30DF               	movlw	223
   823  007C  00F3               	movwf	??_ISR
   824  007D                     u13_27:
   825  007D  0BF3               	decfsz	??_ISR,f
   826  007E  287D               	goto	u13_27
   827  007F  0BF4               	decfsz	??_ISR+1,f
   828  0080  287D               	goto	u13_27
   829  0081  0BF5               	decfsz	??_ISR+2,f
   830  0082  287D               	goto	u13_27
   831  0083  2884               	nop2
   832  0084                     i1l740:
   833                           
   834                           ;main.c: 117:             RB0 = 0;
   835  0084  1283               	bcf	3,5	;RP0=0, select bank0
   836  0085  1303               	bcf	3,6	;RP1=0, select bank0
   837  0086  1006               	bcf	6,0	;volatile
   838  0087                     i1l742:
   839                           
   840                           ;main.c: 118:             RB1 = 0;
   841  0087  1086               	bcf	6,1	;volatile
   842  0088                     i1l744:
   843                           
   844                           ;main.c: 119:             RB2 = 0;
   845  0088  1106               	bcf	6,2	;volatile
   846  0089                     i1l746:
   847                           
   848                           ;main.c: 120:             RB3 = 0;
   849  0089  1186               	bcf	6,3	;volatile
   850                           
   851                           ;main.c: 121:             _delay((unsigned long)((100)*(8000000/4000.0)));
   852  008A  3002               	movlw	2
   853  008B  00F5               	movwf	??_ISR+2
   854  008C  3004               	movlw	4
   855  008D  00F4               	movwf	??_ISR+1
   856  008E  30BA               	movlw	186
   857  008F  00F3               	movwf	??_ISR
   858  0090                     u14_27:
   859  0090  0BF3               	decfsz	??_ISR,f
   860  0091  2890               	goto	u14_27
   861  0092  0BF4               	decfsz	??_ISR+1,f
   862  0093  2890               	goto	u14_27
   863  0094  0BF5               	decfsz	??_ISR+2,f
   864  0095  2890               	goto	u14_27
   865  0096  0000               	nop
   866  0097                     i1l70:
   867  0097  0877               	movf	??_ISR+4,w
   868  0098  008A               	movwf	10
   869  0099  0E76               	swapf	??_ISR+3,w
   870  009A  0083               	movwf	3
   871  009B  0EFE               	swapf	btemp,f
   872  009C  0E7E               	swapf	btemp,w
   873  009D  0009               	retfie
   874  009E                     __end_of_ISR:
   875                           
   876                           	psect	intentry
   877  0004                     __pintentry:	
   878                           ;incstack = 0
   879                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   880                           
   881  0004                     interrupt_function:
   882  007E                     saved_w	set	btemp
   883  0004  00FE               	movwf	btemp
   884  0005  0E03               	swapf	3,w
   885  0006  00F6               	movwf	??_ISR+3
   886  0007  080A               	movf	10,w
   887  0008  00F7               	movwf	??_ISR+4
   888  0009  120A  118A  2814   	ljmp	_ISR
   889                           
   890                           	psect	text5
   891  009E                     __ptext5:	
   892 ;; *************** function _rx_char *****************
   893 ;; Defined at:
   894 ;;		line 65 in file "main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      unsigned char 
   901 ;; Registers used:
   902 ;;		wreg
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0
   910 ;;      Temps:          3       0       0       0       0
   911 ;;      Totals:         3       0       0       0       0
   912 ;;Total ram usage:        3 bytes
   913 ;; Hardware stack levels used: 1
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_ISR
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921  009E                     _rx_char:	
   922                           ;psect for function _rx_char
   923                           
   924  009E                     i1l696:	
   925                           ;incstack = 0
   926                           ; Regs used in _rx_char: [wreg]
   927                           
   928  009E                     i1l53:	
   929                           ;main.c: 67:     while(!RCIF);
   930                           
   931  009E  1283               	bcf	3,5	;RP0=0, select bank0
   932  009F  1303               	bcf	3,6	;RP1=0, select bank0
   933  00A0  1E8C               	btfss	12,5	;volatile
   934  00A1  28A3               	goto	u1_21
   935  00A2  28A4               	goto	u1_20
   936  00A3                     u1_21:
   937  00A3  289E               	goto	i1l53
   938  00A4                     u1_20:
   939  00A4                     i1l55:
   940                           
   941                           ;main.c: 68:     RB2 = 1;
   942  00A4  1506               	bsf	6,2	;volatile
   943  00A5                     i1l698:
   944                           
   945                           ;main.c: 69:     _delay((unsigned long)((100)*(8000000/4000.0)));
   946  00A5  3002               	movlw	2
   947  00A6  00F2               	movwf	??_rx_char+2
   948  00A7  3004               	movlw	4
   949  00A8  00F1               	movwf	??_rx_char+1
   950  00A9  30BA               	movlw	186
   951  00AA  00F0               	movwf	??_rx_char
   952  00AB                     u15_27:
   953  00AB  0BF0               	decfsz	??_rx_char,f
   954  00AC  28AB               	goto	u15_27
   955  00AD  0BF1               	decfsz	??_rx_char+1,f
   956  00AE  28AB               	goto	u15_27
   957  00AF  0BF2               	decfsz	??_rx_char+2,f
   958  00B0  28AB               	goto	u15_27
   959  00B1  0000               	nop
   960  00B2                     i1l700:
   961                           
   962                           ;main.c: 70:     RB2 = 0;
   963  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   964  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   965  00B4  1106               	bcf	6,2	;volatile
   966                           
   967                           ;main.c: 71:     _delay((unsigned long)((100)*(8000000/4000.0)));
   968  00B5  3002               	movlw	2
   969  00B6  00F2               	movwf	??_rx_char+2
   970  00B7  3004               	movlw	4
   971  00B8  00F1               	movwf	??_rx_char+1
   972  00B9  30BA               	movlw	186
   973  00BA  00F0               	movwf	??_rx_char
   974  00BB                     u16_27:
   975  00BB  0BF0               	decfsz	??_rx_char,f
   976  00BC  28BB               	goto	u16_27
   977  00BD  0BF1               	decfsz	??_rx_char+1,f
   978  00BE  28BB               	goto	u16_27
   979  00BF  0BF2               	decfsz	??_rx_char+2,f
   980  00C0  28BB               	goto	u16_27
   981  00C1  0000               	nop
   982                           
   983                           ;main.c: 72:     return RCREG;
   984  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   985  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   986  00C4  081A               	movf	26,w	;volatile
   987  00C5                     i1l56:
   988  00C5  0008               	return
   989  00C6                     __end_of_rx_char:
   990  007E                     btemp	set	126	;btemp
   991  007E                     wtemp0	set	126
   992                           
   993                           	psect	idloc
   994                           
   995                           ;Config register IDLOC0 @ 0x2000
   996                           ;	unspecified, using default values
   997  2000                     	org	8192
   998  2000  3FFF               	dw	16383
   999                           
  1000                           ;Config register IDLOC1 @ 0x2001
  1001                           ;	unspecified, using default values
  1002  2001                     	org	8193
  1003  2001  3FFF               	dw	16383
  1004                           
  1005                           ;Config register IDLOC2 @ 0x2002
  1006                           ;	unspecified, using default values
  1007  2002                     	org	8194
  1008  2002  3FFF               	dw	16383
  1009                           
  1010                           ;Config register IDLOC3 @ 0x2003
  1011                           ;	unspecified, using default values
  1012  2003                     	org	8195
  1013  2003  3FFF               	dw	16383
  1014                           
  1015                           	psect	config
  1016                           
  1017                           ;Config register CONFIG1 @ 0x2007
  1018                           ;	Oscillator Selection bits
  1019                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1020                           ;	Watchdog Timer Enable bit
  1021                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1022                           ;	Power-up Timer Enable bit
  1023                           ;	PWRTE = OFF, PWRT disabled
  1024                           ;	RE3/MCLR pin function select bit
  1025                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1026                           ;	Code Protection bit
  1027                           ;	CP = OFF, Program memory code protection is disabled
  1028                           ;	Data Code Protection bit
  1029                           ;	CPD = OFF, Data memory code protection is disabled
  1030                           ;	Brown Out Reset Selection bits
  1031                           ;	BOREN = ON, BOR enabled
  1032                           ;	Internal External Switchover bit
  1033                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1034                           ;	Fail-Safe Clock Monitor Enabled bit
  1035                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1036                           ;	Low Voltage Programming Enable bit
  1037                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1038                           ;	In-Circuit Debugger Mode bit
  1039                           ;	DEBUG = 0x1, unprogrammed default
  1040  2007                     	org	8199
  1041  2007  2FD2               	dw	12242
  1042                           
  1043                           ;Config register CONFIG2 @ 0x2008
  1044                           ;	Brown-out Reset Selection bit
  1045                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1046                           ;	Flash Program Memory Self Write Enable bits
  1047                           ;	WRT = OFF, Write protection off
  1048  2008                     	org	8200
  1049  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      7       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_rx_char

Critical Paths under _main in BANK0

    _main->_tx_char

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      22
                                              4 BANK0      3     3      0
                           _setupLED
                          _setupUART
                            _tx_char
 ---------------------------------------------------------------------------------
 (1) _tx_char                                              4     4      0      22
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupLED                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0       0
                                              3 COMMON     5     5      0
                            _rx_char
 ---------------------------------------------------------------------------------
 (3) _rx_char                                              3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setupLED
   _setupUART
   _tx_char

 _ISR (ROOT)
   _rx_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Mar 28 17:28:51 2022

                     l50 0127                       l62 0107                       l47 011C  
                     l59 0101                       u60 0107                       u61 0106  
                     u77 00DE                       u87 00F5                      l760 010D  
                    l770 0115                      l762 010E                      l780 011D  
                    l772 0118                      l764 0110                      l756 0108  
                    l774 0119                      l766 0111                      l758 010B  
                    l782 00EC                      l790 00CB                      l776 011A  
                    l768 0114                      l784 00ED                      l792 00D0  
                    l778 011B                      l786 00FC                      l794 00D6  
                    l788 00C6                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      _ISR 0014  
                   ?_ISR 0070                     _CREN 00C4                     _RCIF 0065  
                   i1l53 009E                     i1l70 0097                     i1l55 00A4  
                   i1l56 00C5                     _TRMT 04C1                     u1_20 00A4  
                   u1_21 00A3                     u3_20 003A                     u3_21 0039  
                   u4_20 003E                     u4_21 003D                     u5_20 0071  
                   u5_21 0070                     u9_27 001D                     _data 0078  
                   _main 00C6                     btemp 007E                     start 000C  
                  ??_ISR 0073                    ?_main 0070                    _ANSEL 0188  
                  i1l700 00B2                    i1l710 0014                    i1l720 003E  
                  i1l712 0017                    i1l730 0060                    i1l722 003F  
                  i1l714 0024                    i1l740 0084                    i1l724 004C  
                  i1l732 0063                    i1l716 0034                    i1l742 0087  
                  i1l734 006B                    i1l726 005C                    i1l718 003A  
                  i1l744 0088                    i1l736 0071                    i1l728 005F  
                  i1l746 0089                    i1l738 0077                    i1l696 009E  
                  i1l698 00A5                    _RCREG 001A                    u10_27 002D  
                  u11_27 0045                    u12_27 0055                    u13_27 007D  
                  u14_27 0090                    u15_27 00AB                    u16_27 00BB  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087                    _TXREG 0019                    pclath 000A  
        __end_of_rx_char 00C6          __end_of_tx_char 0108                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00E9  
                 ??_main 0024                   _ANSELH 0189         __end_of_setupLED 0128  
                 saved_w 007E                ??_rx_char 0070                ??_tx_char 0020  
__end_of__initialization 0010           __pcstackCOMMON 0070               __pmaintext 00C6  
             __pintentry 0004                ?_setupLED 0070                  __ptext1 00E9  
                __ptext2 0108                  __ptext3 011D                  __ptext4 0014  
                __ptext5 009E                  _rx_char 009E                  _tx_char 00E9  
   end_of_initialization 0010        __end_of_setupUART 011D               ??_setupLED 0020  
              _RCSTAbits 0018                _TXSTAbits 0098      start_initialization 000F  
            __end_of_ISR 009E              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020                 ?_rx_char 0070                 ?_tx_char 0070  
      interrupt_function 0004                 _PIE1bits 008C                _setupUART 0108  
             ?_setupUART 0070                 _setupLED 011D               _INTCONbits 000B  
               intlevel1 0000              ??_setupUART 0020                 tx_char@a 0023  
