

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Mar 28 12:49:17 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F886 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0019                     _TXREG	set	25
   206  001A                     _RCREG	set	26
   207  000B                     _INTCONbits	set	11
   208  0006                     _PORTB	set	6
   209  0030                     _RB0	set	48
   210  0064                     _TXIF	set	100
   211  0031                     _RB1	set	49
   212  0065                     _RCIF	set	101
   213  00C4                     _CREN	set	196
   214  00C7                     _SPEN	set	199
   215  008C                     _PIE1bits	set	140
   216  0086                     _TRISBbits	set	134
   217  0086                     _TRISB	set	134
   218  0098                     _TXSTAbits	set	152
   219  0099                     _SPBRG	set	153
   220  0087                     _TRISCbits	set	135
   221  0087                     _TRISC	set	135
   222  04C1                     _TRMT	set	1217
   223  04C5                     _TXEN	set	1221
   224  04C4                     _SYNC	set	1220
   225  04C2                     _BRGH	set	1218
   226  0189                     _ANSELH	set	393
   227  0188                     _ANSEL	set	392
   228                           
   229                           	psect	cinit
   230  000F                     start_initialization:	
   231                           ; #config settings
   232                           
   233  000F                     __initialization:
   234                           
   235                           ; Clear objects allocated to COMMON
   236  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   237  0010                     end_of_initialization:	
   238                           ;End of C runtime variable initialization code
   239                           
   240  0010                     __end_of__initialization:
   241  0010  0183               	clrf	3
   242  0011  120A  118A  2843   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMMON
   245  0079                     __pbssCOMMON:
   246  0079                     _data:
   247  0079                     	ds	1
   248                           
   249                           	psect	cstackCOMMON
   250  0070                     __pcstackCOMMON:
   251  0070                     ?_setupUART:
   252  0070                     ?_setupLED:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_setupISRTx:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_UART_Write:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_isr_tx:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ??_isr_tx:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270                           
   271                           ; 1 bytes @ 0x0
   272  0070                     	ds	5
   273  0075                     ??_setupUART:
   274  0075                     ??_setupLED:	
   275                           ; 1 bytes @ 0x5
   276                           
   277  0075                     ??_setupISRTx:	
   278                           ; 1 bytes @ 0x5
   279                           
   280  0075                     ??_UART_Write:	
   281                           ; 1 bytes @ 0x5
   282                           
   283  0075                     UART_Write@data:	
   284                           ; 1 bytes @ 0x5
   285                           
   286                           
   287                           ; 1 bytes @ 0x5
   288  0075                     	ds	1
   289  0076                     ??_main:
   290                           
   291                           ; 1 bytes @ 0x6
   292  0076                     	ds	3
   293                           
   294                           	psect	maintext
   295  0043                     __pmaintext:	
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 165 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : B00/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          3       0       0       0       0
   318 ;;      Totals:         3       0       0       0       0
   319 ;;Total ram usage:        3 bytes
   320 ;; Hardware stack levels required when called: 2
   321 ;; This function calls:
   322 ;;		_UART_Write
   323 ;;		_setupISRTx
   324 ;;		_setupLED
   325 ;;		_setupUART
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331  0043                     _main:	
   332                           ;psect for function _main
   333                           
   334  0043                     l738:	
   335                           ;incstack = 0
   336                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   337                           
   338                           
   339                           ;main.c: 167:     setupUART();
   340  0043  120A  118A  2069  120A  118A  	fcall	_setupUART
   341  0048                     l740:
   342                           
   343                           ;main.c: 168:     setupLED();
   344  0048  120A  118A  207B  120A  118A  	fcall	_setupLED
   345  004D                     l742:
   346                           
   347                           ;main.c: 169:     setupISRTx();
   348  004D  120A  118A  2096  120A  118A  	fcall	_setupISRTx
   349  0052                     l85:	
   350                           ;main.c: 171:     while(1){
   351                           
   352                           
   353                           ;main.c: 172:         UART_Write('a');
   354  0052  3061               	movlw	97
   355  0053  120A  118A  208A  120A  118A  	fcall	_UART_Write
   356  0058                     l744:
   357                           
   358                           ;main.c: 174:         _delay((unsigned long)((100)*(8000000/4000.0)));
   359  0058  3002               	movlw	2
   360  0059  00F8               	movwf	??_main+2
   361  005A  3004               	movlw	4
   362  005B  00F7               	movwf	??_main+1
   363  005C  30BA               	movlw	186
   364  005D  00F6               	movwf	??_main
   365  005E                     u47:
   366  005E  0BF6               	decfsz	??_main,f
   367  005F  285E               	goto	u47
   368  0060  0BF7               	decfsz	??_main+1,f
   369  0061  285E               	goto	u47
   370  0062  0BF8               	decfsz	??_main+2,f
   371  0063  285E               	goto	u47
   372  0064  0000               	nop
   373  0065  2852               	goto	l85
   374  0066  120A  118A  280C   	ljmp	start
   375  0069                     __end_of_main:
   376                           
   377                           	psect	text1
   378  0069                     __ptext1:	
   379 ;; *************** function _setupUART *****************
   380 ;; Defined at:
   381 ;;		line 37 in file "main.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   395 ;;      Params:         0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; Hardware stack levels required when called: 1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409  0069                     _setupUART:	
   410                           ;psect for function _setupUART
   411                           
   412  0069                     l680:	
   413                           ;incstack = 0
   414                           ; Regs used in _setupUART: [wreg+status,2]
   415                           
   416                           
   417                           ;main.c: 39:     TRISC = 0x0;
   418  0069  1683               	bsf	3,5	;RP0=1, select bank1
   419  006A  1303               	bcf	3,6	;RP1=0, select bank1
   420  006B  0187               	clrf	7	;volatile
   421  006C                     l682:
   422                           
   423                           ;main.c: 40:     TRISCbits.TRISC6 = 1;
   424  006C  1707               	bsf	7,6	;volatile
   425  006D                     l684:
   426                           
   427                           ;main.c: 41:     TRISCbits.TRISC7 = 1;
   428  006D  1787               	bsf	7,7	;volatile
   429  006E                     l686:
   430                           
   431                           ;main.c: 44:     BRGH = 1;
   432  006E  1518               	bsf	24,2	;volatile
   433  006F                     l688:
   434                           
   435                           ;main.c: 45:  SPBRG = (8000000 - 9600*16)/(9600*16);
   436  006F  3062               	movlw	98
   437  0070  0099               	movwf	25	;volatile
   438  0071                     l690:
   439                           
   440                           ;main.c: 46:     SYNC = 0;
   441  0071  1218               	bcf	24,4	;volatile
   442  0072                     l692:
   443                           
   444                           ;main.c: 47:     SPEN = 1;
   445  0072  1283               	bcf	3,5	;RP0=0, select bank0
   446  0073  1303               	bcf	3,6	;RP1=0, select bank0
   447  0074  1798               	bsf	24,7	;volatile
   448  0075                     l694:
   449                           
   450                           ;main.c: 48:     CREN = 1;
   451  0075  1618               	bsf	24,4	;volatile
   452  0076                     l696:
   453                           
   454                           ;main.c: 49:     TXEN = 1;
   455  0076  1683               	bsf	3,5	;RP0=1, select bank1
   456  0077  1303               	bcf	3,6	;RP1=0, select bank1
   457  0078  1698               	bsf	24,5	;volatile
   458  0079                     l698:
   459                           
   460                           ;main.c: 50:     TXSTAbits.TX9 = 0;
   461  0079  1318               	bcf	24,6	;volatile
   462  007A                     l53:
   463  007A  0008               	return
   464  007B                     __end_of_setupUART:
   465                           
   466                           	psect	text2
   467  007B                     __ptext2:	
   468 ;; *************** function _setupLED *****************
   469 ;; Defined at:
   470 ;;		line 53 in file "main.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		status,2
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0
   487 ;;      Totals:         0       0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels used: 1
   490 ;; Hardware stack levels required when called: 1
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498  007B                     _setupLED:	
   499                           ;psect for function _setupLED
   500                           
   501  007B                     l700:	
   502                           ;incstack = 0
   503                           ; Regs used in _setupLED: [status,2]
   504                           
   505                           
   506                           ;main.c: 55:     PORTB = 0x0;
   507  007B  1283               	bcf	3,5	;RP0=0, select bank0
   508  007C  1303               	bcf	3,6	;RP1=0, select bank0
   509  007D  0186               	clrf	6	;volatile
   510                           
   511                           ;main.c: 56:     TRISB = 0x0;
   512  007E  1683               	bsf	3,5	;RP0=1, select bank1
   513  007F  1303               	bcf	3,6	;RP1=0, select bank1
   514  0080  0186               	clrf	6	;volatile
   515  0081                     l702:
   516                           
   517                           ;main.c: 57:     TRISBbits.TRISB0 = 1;
   518  0081  1406               	bsf	6,0	;volatile
   519  0082                     l704:
   520                           
   521                           ;main.c: 58:     TRISBbits.TRISB1 = 1;
   522  0082  1486               	bsf	6,1	;volatile
   523  0083                     l706:
   524                           
   525                           ;main.c: 59:     TRISBbits.TRISB2 = 1;
   526  0083  1506               	bsf	6,2	;volatile
   527  0084                     l708:
   528                           
   529                           ;main.c: 60:     TRISBbits.TRISB3 = 1;
   530  0084  1586               	bsf	6,3	;volatile
   531                           
   532                           ;main.c: 63:     ANSEL = 0x0;
   533  0085  1683               	bsf	3,5	;RP0=1, select bank3
   534  0086  1703               	bsf	3,6	;RP1=1, select bank3
   535  0087  0188               	clrf	8	;volatile
   536                           
   537                           ;main.c: 64:     ANSELH = 0x0;
   538  0088  0189               	clrf	9	;volatile
   539  0089                     l56:
   540  0089  0008               	return
   541  008A                     __end_of_setupLED:
   542                           
   543                           	psect	text3
   544  0096                     __ptext3:	
   545 ;; *************** function _setupISRTx *****************
   546 ;; Defined at:
   547 ;;		line 68 in file "main.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		None
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          0       0       0       0       0
   564 ;;      Totals:         0       0       0       0       0
   565 ;;Total ram usage:        0 bytes
   566 ;; Hardware stack levels used: 1
   567 ;; Hardware stack levels required when called: 1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_main
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575  0096                     _setupISRTx:	
   576                           ;psect for function _setupISRTx
   577                           
   578  0096                     l710:	
   579                           ;incstack = 0
   580                           ; Regs used in _setupISRTx: []
   581                           
   582                           
   583                           ;main.c: 73:     INTCONbits. GIE = 1;
   584  0096  178B               	bsf	11,7	;volatile
   585                           
   586                           ;main.c: 74:     INTCONbits.PEIE = 0;
   587  0097  130B               	bcf	11,6	;volatile
   588                           
   589                           ;main.c: 75:     PIE1bits.TXIE = 1;
   590  0098  1683               	bsf	3,5	;RP0=1, select bank1
   591  0099  1303               	bcf	3,6	;RP1=0, select bank1
   592  009A  160C               	bsf	12,4	;volatile
   593  009B                     l59:
   594  009B  0008               	return
   595  009C                     __end_of_setupISRTx:
   596                           
   597                           	psect	text4
   598  008A                     __ptext4:	
   599 ;; *************** function _UART_Write *****************
   600 ;; Defined at:
   601 ;;		line 92 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  data            1    wreg     unsigned char 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  data            1    5[COMMON] unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   615 ;;      Params:         0       0       0       0       0
   616 ;;      Locals:         1       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0
   618 ;;      Totals:         1       0       0       0       0
   619 ;;Total ram usage:        1 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; Hardware stack levels required when called: 1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629  008A                     _UART_Write:	
   630                           ;psect for function _UART_Write
   631                           
   632                           
   633                           ;incstack = 0
   634                           ; Regs used in _UART_Write: [wreg]
   635                           ;UART_Write@data stored from wreg
   636  008A  00F5               	movwf	UART_Write@data
   637  008B                     l712:
   638  008B                     l71:	
   639                           ;main.c: 93:   while(!TRMT);
   640                           
   641  008B  1683               	bsf	3,5	;RP0=1, select bank1
   642  008C  1303               	bcf	3,6	;RP1=0, select bank1
   643  008D  1C98               	btfss	24,1	;volatile
   644  008E  2890               	goto	u11
   645  008F  2891               	goto	u10
   646  0090                     u11:
   647  0090  288B               	goto	l71
   648  0091                     u10:
   649  0091                     l714:
   650                           
   651                           ;main.c: 94:   TXREG = data;
   652  0091  0875               	movf	UART_Write@data,w
   653  0092  1283               	bcf	3,5	;RP0=0, select bank0
   654  0093  1303               	bcf	3,6	;RP1=0, select bank0
   655  0094  0099               	movwf	25	;volatile
   656  0095                     l74:
   657  0095  0008               	return
   658  0096                     __end_of_UART_Write:
   659                           
   660                           	psect	text5
   661  0014                     __ptext5:	
   662 ;; *************** function _isr_tx *****************
   663 ;; Defined at:
   664 ;;		line 145 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          5       0       0       0       0
   681 ;;      Totals:         5       0       0       0       0
   682 ;;Total ram usage:        5 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		Interrupt level 1
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691  0014                     _isr_tx:	
   692                           ;psect for function _isr_tx
   693                           
   694  0014                     i1l724:
   695                           
   696                           ;main.c: 148:     RB1 = 1;
   697  0014  1283               	bcf	3,5	;RP0=0, select bank0
   698  0015  1303               	bcf	3,6	;RP1=0, select bank0
   699  0016  1486               	bsf	6,1	;volatile
   700  0017                     i1l726:
   701                           
   702                           ;main.c: 149:     _delay((unsigned long)((100)*(8000000/4000.0)));
   703  0017  3002               	movlw	2
   704  0018  00F2               	movwf	??_isr_tx+2
   705  0019  3004               	movlw	4
   706  001A  00F1               	movwf	??_isr_tx+1
   707  001B  30BA               	movlw	186
   708  001C  00F0               	movwf	??_isr_tx
   709  001D                     u5_27:
   710  001D  0BF0               	decfsz	??_isr_tx,f
   711  001E  281D               	goto	u5_27
   712  001F  0BF1               	decfsz	??_isr_tx+1,f
   713  0020  281D               	goto	u5_27
   714  0021  0BF2               	decfsz	??_isr_tx+2,f
   715  0022  281D               	goto	u5_27
   716  0023  0000               	nop
   717  0024                     i1l728:
   718                           
   719                           ;main.c: 150:     RB1 = 0;
   720  0024  1283               	bcf	3,5	;RP0=0, select bank0
   721  0025  1303               	bcf	3,6	;RP1=0, select bank0
   722  0026  1086               	bcf	6,1	;volatile
   723  0027                     i1l730:
   724                           
   725                           ;main.c: 153:     if (TXIF)
   726  0027  1E0C               	btfss	12,4	;volatile
   727  0028  282A               	goto	u3_21
   728  0029  282B               	goto	u3_20
   729  002A                     u3_21:
   730  002A  283C               	goto	i1l80
   731  002B                     u3_20:
   732  002B                     i1l732:
   733                           
   734                           ;main.c: 154:     {;main.c: 156:         RB0 = 1;
   735  002B  1406               	bsf	6,0	;volatile
   736  002C                     i1l734:
   737                           
   738                           ;main.c: 157:         _delay((unsigned long)((100)*(8000000/4000.0)));
   739  002C  3002               	movlw	2
   740  002D  00F2               	movwf	??_isr_tx+2
   741  002E  3004               	movlw	4
   742  002F  00F1               	movwf	??_isr_tx+1
   743  0030  30BA               	movlw	186
   744  0031  00F0               	movwf	??_isr_tx
   745  0032                     u6_27:
   746  0032  0BF0               	decfsz	??_isr_tx,f
   747  0033  2832               	goto	u6_27
   748  0034  0BF1               	decfsz	??_isr_tx+1,f
   749  0035  2832               	goto	u6_27
   750  0036  0BF2               	decfsz	??_isr_tx+2,f
   751  0037  2832               	goto	u6_27
   752  0038  0000               	nop
   753  0039                     i1l736:
   754                           
   755                           ;main.c: 158:         RB0 = 0;
   756  0039  1283               	bcf	3,5	;RP0=0, select bank0
   757  003A  1303               	bcf	3,6	;RP1=0, select bank0
   758  003B  1006               	bcf	6,0	;volatile
   759  003C                     i1l80:
   760  003C  0874               	movf	??_isr_tx+4,w
   761  003D  008A               	movwf	10
   762  003E  0E73               	swapf	??_isr_tx+3,w
   763  003F  0083               	movwf	3
   764  0040  0EFE               	swapf	btemp,f
   765  0041  0E7E               	swapf	btemp,w
   766  0042  0009               	retfie
   767  0043                     __end_of_isr_tx:
   768  007E                     btemp	set	126	;btemp
   769  007E                     wtemp0	set	126
   770                           
   771                           	psect	intentry
   772  0004                     __pintentry:	
   773                           ;incstack = 0
   774                           ; Regs used in _isr_tx: [wreg]
   775                           
   776  0004                     interrupt_function:
   777  007E                     saved_w	set	btemp
   778  0004  00FE               	movwf	btemp
   779  0005  0E03               	swapf	3,w
   780  0006  00F3               	movwf	??_isr_tx+3
   781  0007  080A               	movf	10,w
   782  0008  00F4               	movwf	??_isr_tx+4
   783  0009  120A  118A  2814   	ljmp	_isr_tx
   784                           
   785                           	psect	idloc
   786                           
   787                           ;Config register IDLOC0 @ 0x2000
   788                           ;	unspecified, using default values
   789  2000                     	org	8192
   790  2000  3FFF               	dw	16383
   791                           
   792                           ;Config register IDLOC1 @ 0x2001
   793                           ;	unspecified, using default values
   794  2001                     	org	8193
   795  2001  3FFF               	dw	16383
   796                           
   797                           ;Config register IDLOC2 @ 0x2002
   798                           ;	unspecified, using default values
   799  2002                     	org	8194
   800  2002  3FFF               	dw	16383
   801                           
   802                           ;Config register IDLOC3 @ 0x2003
   803                           ;	unspecified, using default values
   804  2003                     	org	8195
   805  2003  3FFF               	dw	16383
   806                           
   807                           	psect	config
   808                           
   809                           ;Config register CONFIG1 @ 0x2007
   810                           ;	Oscillator Selection bits
   811                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   812                           ;	Watchdog Timer Enable bit
   813                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   814                           ;	Power-up Timer Enable bit
   815                           ;	PWRTE = OFF, PWRT disabled
   816                           ;	RE3/MCLR pin function select bit
   817                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   818                           ;	Code Protection bit
   819                           ;	CP = OFF, Program memory code protection is disabled
   820                           ;	Data Code Protection bit
   821                           ;	CPD = OFF, Data memory code protection is disabled
   822                           ;	Brown Out Reset Selection bits
   823                           ;	BOREN = ON, BOR enabled
   824                           ;	Internal External Switchover bit
   825                           ;	IESO = ON, Internal/External Switchover mode is enabled
   826                           ;	Fail-Safe Clock Monitor Enabled bit
   827                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   828                           ;	Low Voltage Programming Enable bit
   829                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   830                           ;	In-Circuit Debugger Mode bit
   831                           ;	DEBUG = 0x1, unprogrammed default
   832  2007                     	org	8199
   833  2007  2FD2               	dw	12242
   834                           
   835                           ;Config register CONFIG2 @ 0x2008
   836                           ;	Brown-out Reset Selection bit
   837                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   838                           ;	Flash Program Memory Self Write Enable bits
   839                           ;	WRT = OFF, Write protection off
   840  2008                     	org	8200
   841  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Write

Critical Paths under _isr_tx in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr_tx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_tx in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_tx in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_tx in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              6 COMMON     3     3      0
                         _UART_Write
                         _setupISRTx
                           _setupLED
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupLED                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupISRTx                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr_tx                                               5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Write
   _setupISRTx
   _setupLED
   _setupUART

 _isr_tx (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Mar 28 12:49:17 2022

                     l53 007A                       l71 008B                       l56 0089  
                     l74 0095                       l59 009B                       l85 0052  
                     u10 0091                       u11 0090                       u47 005E  
                    l700 007B                      l710 0096                      l702 0081  
                    l712 008B                      l704 0082                      l714 0091  
                    l706 0083                      l708 0084                      l740 0048  
                    l742 004D                      l680 0069                      l744 0058  
                    l690 0071                      l682 006C                      l738 0043  
                    l692 0072                      l684 006D                      l694 0075  
                    l686 006E                      l696 0076                      l688 006F  
                    l698 0079                      _RB0 0030                      _RB1 0031  
                   _BRGH 04C2                     _CREN 00C4                     _RCIF 0065  
                   i1l80 003C                     _SPEN 00C7                     _TRMT 04C1  
                   _TXEN 04C5                     _TXIF 0064                     _SYNC 04C4  
                   u3_20 002B                     u3_21 002A                     u5_27 001D  
                   u6_27 0032                     _data 0079                     _main 0043  
                   btemp 007E                     start 000C                    ?_main 0070  
                  _ANSEL 0188                    i1l730 0027                    i1l732 002B  
                  i1l724 0014                    i1l734 002C                    i1l726 0017  
                  i1l736 0039                    i1l728 0024                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087                    _TXREG 0019              ?_UART_Write 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0069                   ??_main 0076  
                 _ANSELH 0189                   _isr_tx 0014         __end_of_setupLED 008A  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
             __pmaintext 0043               __pintentry 0004                  ?_isr_tx 0070  
           ??_UART_Write 0075                ?_setupLED 0070       __end_of_UART_Write 0096  
                __ptext1 0069                  __ptext2 007B                  __ptext3 0096  
                __ptext4 008A                  __ptext5 0014     end_of_initialization 0010  
      __end_of_setupUART 007B               ??_setupLED 0075               _setupISRTx 0096  
         UART_Write@data 0075                _TRISBbits 0086                _TRISCbits 0087  
              _TXSTAbits 0098           __end_of_isr_tx 0043      start_initialization 000F  
            ?_setupISRTx 0070                 ??_isr_tx 0070              __pbssCOMMON 0079  
              ___latbits 0002        interrupt_function 0004                 _PIE1bits 008C  
              _setupUART 0069               ?_setupUART 0070                 _setupLED 007B  
           ??_setupISRTx 0075               _INTCONbits 000B                 intlevel1 0000  
     __end_of_setupISRTx 009C              ??_setupUART 0075               _UART_Write 008A  
